# name of chart
name: dp-config-aws
# label indicating which project this pipeline belongs to (Don't change)
partOf: TIBCO-Platform
# indicating which tools are used to generate this template (Don't change)
createdBy: generator
serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# this will create IAM role for fluent-bit to send logging message to opensearch or pipeline
awsRole1:
  enable: true
  name: fluent-bit-service-role
  namespace: tibco-system
  saName: fluent-bit # service account name
  saNamespace: fluent-system # service namespace
  tags:
    tibco-platform: fluent
  inlinePolicies:
    - |
      Version: '2012-10-17'
      Statement:
      - Action: osis:Ingest
        Effect: Allow
        Resource: arn:aws:osis:us-west-2:679789275507:pipeline/observability

# this will create IAM role for ADOT (AWS Distro for OpenTelemetry) Collector
# see: https://docs.aws.amazon.com/eks/latest/userguide/adot-iam.html
awsRole2:
  enable: false
  name: adot-collector
  namespace: tibco-system
  saName: adot-collector # service account name
  saNamespace: opentelemetry-operator-system # service namespace
  tags:
    tibco-platform: adot
  attachedPolicies:
    - "arn:aws:iam::aws:policy/AmazonPrometheusRemoteWriteAccess"
    - "arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess"
    - "arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy"

adot:
  writeEndpoint: https://aps-workspaces.us-west-2.amazonaws.com/workspaces/ws-1467d8ae-0d95-4f01-a004-c98abf459a8c/api/v1/remote_write

# the top level domain
domain:
  external: dp-platform.tcie.pro
  internal: dp-platform.tcie.pro

# internal domain list
internalDomain:
  enable: true
  list:
  - name: es-internal
  - name: harbor-internal

ingressProvider: 
  name: traefik #citrix
  serviceName: #-cpx-service
  port: 8443 #443

traefik:
  enabled: true
  hub: # for hub
    enabled: false
  service: # for external-dns
    type: ClusterIP
  ingressRoute: # for dashboard
    dashboard:
      matchRule: Host(`traefik-alb-apps.dp-platform.tcie.pro`) && PathPrefix(`/dashboard`) || Host(`traefik-alb-apps.dp-platform.tcie.pro`) && PathPrefix(`/api`)
      entryPoints:
        - traefik
        - web
        - websecure
  providers: # for external service
    kubernetesIngress:
      allowExternalNameServices: true
  nodeSelector: # for cic2
    kubernetes.io/os: linux
  additionalArguments:
    - '--serversTransport.insecureSkipVerify=true'

citrix-cpx-with-ingress-controller:
  enabled: false
  license:
    accept: yes
  crds:
    install: true
  ingressClass:
    - citrix-adc